/**
  * @file
  // Cellular SASS mixins
  //    tread with caution
  //                      ^    ^
  //                     / \  //\
  //       |\___/|      /   \//  \
  //       /O  O  \__  /    //  | \
  //      /     /  \/_/    //   |  \
  //      @___@'    \/_   //    |   \
  //         |       \/_ //     |    \
  //         |        \///      |     \
  //        _|_ /   )  //       |      \
  //       '/,_ _ _/  ( ; -.    |    _ _\           .-~~~^-.
  //       ,-{        _      `-.|.-~-.           .~         `.
  //        '/\      /                 ~-. _ .-~      .-~^-.  \
  //           `.   {            }                   /      \  \
  //         .----~-.\        \-'                 .~   `      \  `. \^-_
  //        ///.----..>    c   \             _ -~             `.  ^-`  ^-_
  //          ///-._ _ _ _ _ _ _}^ - - - - ~                     ~--,___.-/
  //
  /////
*/

@mixin clearfix() {
  clear: both;
  zoom: 1;
  
  &:before,
  &:after {
    content: "";
    display: table;
  }

  &:after {
    clear: both;
  }
}

@mixin overlay($color) {
  $opacity: 0.8;

  background-color: adjust-saturation($color, -($opacity * 10));
  background-color: rgba($color, $opacity);
  @if lightness($color) < 50% {
    color: darken($color, 70%);

    h2,
    h3,
    h4 {
      color: darken($color, 50%);
    }

    p {
      color: darken($color, 70%);
    }
    } @else {
    color: lighten($color, 70%);

    h2,
    h3,
    h4 {
      color: lighten($color, 50%);
    }

    p {
      color: lighten($color, 70%);
    }
  }
}

@mixin uniquelinks($hilight: $hilight) {
  // Unique link styling

  &:nth-child(1) a {
    border-color: darken($hilight, 10%);
  }

  &:nth-child(2) a {
    border-color: darken($hilight, 20%);
  }

  &:nth-child(3) a {
    border-color: darken($hilight, 30%);
  }

  &:nth-child(4) a {
    border-color: darken($hilight, 40%);
  }

  &:nth-child(5) a {
    border-color: darken($hilight, 50%);
  }
}

@mixin contrast($color) {
  @if lightness($color) < 50% {
    color: lighten($color, 70%);

    p {
      color: lighten($color, $adjust_large);
    }

  }
  @else {
    color: darken($color, 70%);

    p {
      color: darken($color, $adjust_large);
    }
  }
}

@mixin checkbox() {
  // Apply pseudo-element selectors so old browsers still work
  &:not(:checked),
  &:checked {
    position: absolute;
    left: -999em;

    + label {
      position: relative;
      cursor: pointer;
      padding: 0 0 0 2em;
      vertical-align: middle;

      &:before {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        width: 1.4em;
        height: 1.4em;
        vertical-align: middle;
        background: darken($white, 2%);
        border: $grey $border;
        @include box-shadow(inset 0 0 1px 1px $light_grey);
      }

      &:after{
        content: '';
        position: absolute;
        top: .25em;
        left: .25em;
        width: 1em;
        height: 1em;
        background-position: center;
        background-size: 1em;
        background-repeat: no-repeat;
      }
    }

    &:focus {
      + label {
        &:before {
          border: 1px dotted $hilight;
        }
      }
    }

    &:disabled {
      + label {
        color: $light_grey;

        &:before {
          background: $light_grey;
          color: $dark_grey;
        }
      }
    }
  }
}

@mixin textstroke($color: $white, $size: 1px) {
  text-shadow: -$size -$size 0 $color,
  $size -$size 0 $color,
  -$size $size 0 $color, $size $size 0 $color;
}

@mixin button($color: $dark_grey, $background: $white, $hilight: $hilight, $style: 'flat') { // 'flat' || 'bevel'
  $color2: null;
  $background2: null;

  @if(lightness($color) < 50%){
    $color2: lighten($color, 10%);
  }
  @if(lightness($color) > 50%){
    $color2: darken($color, 10%);
  }

  @if(lightness($background) < 50%){
    $background2: lighten($background, 20%);
  }
  @if(lightness($background) > 50%){
    $background2: darken($background, 20%);
  }
  & {
    cursor: pointer;
    display: inline;
    display: inline-block;
    width: auto;
    padding: $small $normal;
    font-family: $h_font;
    font-weight: bold;
    line-height: normal;
    border: $color 2px solid;
    color: $color;
    background-color: $background;
    // transform: translate3d(0,0,0);
    @if ($style == 'bevel') {
      @include gradient_y($background, $background2, $background);
      @include border-radius();
    }
    @else {
      @include border-radius(0.1em);
      @include box-shadow($background2 0 0.1em $small);
    }

    &:visited {
      color: $color;
      background-color: $background;
    }

    &.active,
    &:active {
      cursor: default;
    }

    &.active,
    &:active,
    &:hover {
      outline: none;
      text-decoration: none;
      border-color: $color2;
        //transform: translate3d(0,0.1em,1em);

      @if ($style == 'bevel') {
        @include gradient_y($background, $background);
      }
      @else {
        border-color: $hilight;        
        @include box-shadow($background2 0 0.1em 0.4em);
      }
    }
  }
}

@mixin link($color) {
  color: $color;

  &:visited {
    color: darken($color, 15%);
  }

  &:active,
  &:hover,
  &:focus {
    color: lighten($color, 15%);
  }
}

@mixin title {
  background: $black;
  color: $white;
  text-decoration: none;
}

// Fullscreen background image
@mixin cover($url) {
  background: url($url) no-repeat center center fixed;
  @include prefix(background-size, cover);
}

// Horizontal Linear Gradient
@mixin gradient_x($color_1: $black, $color_2: $white, $color_3: null) {
  background-color: $color_1;
  background-image: linear-gradient(to right, $color_1 0%, $color_2 100%);
}

// Vertical Linear Gradient
@mixin gradient_y($color_1: $white, $color_2: null, $color_3: null) {
  background-color: $color_1;

  @if($color_3 != null) {
    background-image: linear-gradient(to bottom, $color_1 0%, $color_2 40%, $color_3 100%);
  }
  @else if($color_2 != null) {
    background-image: linear-gradient(to bottom, $color_1 0%, $color_2 100%);
  }
  @else {
    @if(lightness($color_1) < 50%) {
      $color_2: lighten($color_1, 50%);
    }
    @else {
      $color_2: lighten($color_1, 50%);
    }
    background-image: linear-gradient(to bottom, $color_1 0%, $color_2 100%);
  }

}

// Radial Gradient
@mixin gradient_rad($color_1: $black, $color_2: $white) {
  background-color: $color_1;
  background-image: radial-gradient(ellipse farthest-side at center top, $color_1 0%, $color_2 100%);
}

@mixin round($rad: $default-border-radius) {
  border-radius: $rad;
}

@mixin round_top($rad: $default-border-radius) {
  border-top-left-radius: $rad;
  border-top-right-radius: $rad;
}

@mixin round_right($rad: $default-border-radius) {
  border-top-right-radius: $rad;
  border-bottom-right-radius: $rad;
}

@mixin round_bottom($rad: $default-border-radius) {
  border-bottom-left-radius: $rad;
  border-bottom-right-radius: $rad;
}

@mixin round_left($rad: $default-border-radius) {
  border-top-left-radius: $rad;
  border-bottom-left-radius: $rad;
}

@mixin tri_left($width: $normal, $height: $normal, $color: $black) {
  &:after {
    content: "";
    position: absolute;
    left: -$width;
    top: 0;
    width: 0;
    height: 0;
    border-top: ($height/2) solid transparent;
    border-bottom: ($height/2) solid transparent;
    border-right: $width solid $color;
  }
}

@mixin tri_right($width: $normal, $height: $normal, $color: $black) {
  &:after {
    content: "";
    position: absolute;
    right: -$width;
    top: 0;
    width: 0;
    height: 0;
    border-top: ($height/2) solid transparent;
    border-bottom: ($height/2) solid transparent;
    border-left: $width solid $color;
  }
}

@mixin ribbon($width: $normal, $height: $normal, $color: $black) {
  position: relative;
  margin: 0 auto $height;
  padding: 0 $width;
  border-bottom: darken($color, 10%) 1px solid;
  background-color: $color;

  &:before,
  &:after {
    content: " ";
    position: absolute;
    bottom: -$height;
    border-top: darken($color, 10%) $height solid;
  }

  &:before {
    left: 0;
    border-left: $width solid transparent;
  }

  &:after {
    right: 0;
    border-right: $width solid transparent;
  }
}

@mixin popout($width: $normal, $height: $normal, $color: $black) {
  position: relative;
  margin: 0 0 $height 0;
  padding: 0 $width;
  background: $color;
  border-bottom: darken($color, 10%) 1px solid;

  &:after {
    content: " ";
    position: absolute;
    left: 0;
    right: 0;
    bottom: -$height;
    height: 0;
    border-top: $height solid darken($color, 30%);
    border-left: $width solid transparent;
    border-right: $width solid transparent;
  }
}
